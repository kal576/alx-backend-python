pipeline {
    agent any

    environment {
        DOCKER_HUB_CRED = credentials('docker-hub-credentials')
        IMAGE_NAME = "kal576/messaging-app"
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main',
                     url: 'https://github.com/kal576/alx-backend-python.git ',
                     credentialsId: 'github-credentials'
            }
        }

        stage('Set Up Python Environment') {
            steps {
                sh 'python3 -m venv venv'
                sh 'source venv/bin/activate'
                sh 'pip3 install --upgrade pip'
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests with Pytest') {
            steps {
                sh 'cd messaging_app && python3 -m pytest tests/ --html=test_report.html'
            }
        }

        stage('Publish Test Report') {
            steps {
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'messaging_app',
                    reportFiles: 'test_report.html',
                    reportName: 'Pytest Report'
                ])
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${IMAGE_NAME}:${IMAGE_TAG} messaging_app/'
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com ', 'docker-hub-credentials')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
                }
            }
        }
    }

    triggers {
        manual()
    }
}
