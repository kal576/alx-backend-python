name: Django CI with Linting & Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: django_test_db
        ports:
          - 3306:3306
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r messaging_app/requirements.txt

      - name: Install flake8 and pytest-cov
        run: |
          pip install flake8 pytest-cov

      - name: Configure Django settings for testing
        run: |
          echo "DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.mysql',
                  'NAME': 'django_test_db',
                  'USER': 'root',
                  'PASSWORD': 'rootpassword',
                  'HOST': '127.0.0.1',
                  'PORT': '3306',
              }
          }" > messaging_app/messaging_app/test_settings.py

      - name: Run migrations and tests with coverage
        run: |
          cd messaging_app
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
          python manage.py test --settings=messaging_app.test_settings --verbosity=2 \
            --coverage --coverage-report=html --coverage-report=term

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

      - name: Run flake8 code linting
        run: |
          cd messaging_app
          flake8 . --count --show-source --statistics
